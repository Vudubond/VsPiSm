#!/bin/bash 
. /home/vpssim.conf

if [ -f /etc/vpssim/netdatasite.info ]; then
clear
echo "========================================================================="
echo "You have installed NetData for server !"
echo "-------------------------------------------------------------------------"
echo "Domain NetData is: $(cat /etc/vpssim/net2ftpsite.info )"
echo "-------------------------------------------------------------------------"
echo "Point domain $(cat /etc/vpssim/net2ftpsite.info) to $serverip"
echo "-------------------------------------------------------------------------"
echo "And access to this domain on the browser to use NetData"
/etc/vpssim/menu/vpssim-netdata-menu
exit
fi


checkketnoi=$(curl -o /dev/null --silent --head --write-out '%{http_code}' "https://vpssim.com/script/vpssim/Softwear/00-all-netdata-version.txt" )
if [[ "$checkketnoi" == "000" ]]; then
clear
echo "========================================================================="
echo "Can not check NetData version"
echo "-------------------------------------------------------------------------"
echo "Please try again !"
/etc/vpssim/menu/vpssim-netdata-menu
exit
fi

cd /tmp
download_version_netdata () {
wget --no-check-certificate -q https://vpssim.com/script/vpssim/Softwear/00-all-netdata-version.txt
}
download_version_netdata
checkdownload_version_netdata=`cat /tmp/00-all-netdata-version.txt`
if [ -z "$checkdownload_version_netdata" ]; then
download_version_netdata
fi
cd
NetData_VERSION=`cat /tmp/00-all-netdata-version.txt | awk 'NR==2 {print $1}' | sed 's/|//' | sed 's/|//'`

echo "========================================================================="
echo "Use this function to setup NetData for server"
echo "-------------------------------------------------------------------------"
echo "Domain for NetData must be new domain and not exited on system"
echo "-------------------------------------------------------------------------"
echo "You can use Sub-Domain for Domain NetData"
echo "-------------------------------------------------------------------------"
echo -n "Type in the Domain [ENTER]: " 
read website
website=`echo $website | tr '[A-Z]' '[a-z]'`
if [ "$website" = "" ]; then
clear
echo "========================================================================="
echo "You entered incorrectly, please re-enter !"
/etc/vpssim/menu/vpssim-netdata-menu
exit
fi

kiemtradomain3="^([[:alnum:]]([[:alnum:]\-]{0,61}[[:alnum:]])?\.)+[[:alpha:]]{2,12}$";
if [[ ! "$website" =~ $kiemtradomain3 ]]; then
	website=`echo $website | tr '[A-Z]' '[a-z]'`
clear
echo "========================================================================="
echo "$website maybe not a domain name!"
echo "-------------------------------------------------------------------------"
echo "Please try again !"
/etc/vpssim/menu/vpssim-netdata-menu
exit
fi

if [ -f /etc/nginx/conf.d/$website.conf ]; then
clear
echo "Discover that $website is existed in the system!"
echo "-------------------------------------------------------------------------"
echo "Please try again !"
/etc/vpssim/menu/vpssim-netdata-menu
exit
fi
backend=vpssim-`date |md5sum |cut -c '1-12'`
echo "========================================================================="
echo "Prepare install NetData for $website"
echo "-------------------------------------------------------------------------"
echo "For security, Search engine will be blocked from connecting to $website" 
echo "-------------------------------------------------------------------------"
echo "$website will not appear on the search engines: Google, Bing..."
echo "-------------------------------------------------------------------------"
echo "And you can not access to http://$serverip:19999"
sleep 8
echo "-------------------------------------------------------------------------"
echo "please wait... "; sleep 2
yum -y install libuuid-devel uuid-dev zlib-devel zlib1g-dev autoconf automake pkg-config
cd /usr/local/vpssim
rm -rf netdata
wget --no-check-certificate -q https://vpssim.com/script/vpssim/Softwear/netdata_$NetData_VERSION.zip
unzip -o -q netdata_$NetData_VERSION.zip
rm -rf /usr/local/vpssim/netdata_$NetData_VERSION.zip
cd /usr/local/vpssim/netdata
yes "" | ./netdata-installer.sh
cd
sed -i "s/.*# bind to =.*/    bind to = 127.0.0.1/g" /etc/netdata/netdata.conf
sed -i "s/.*access log =.*/    access log = none/g" /etc/netdata/netdata.conf
    cat > "/etc/nginx/conf.d/$website.conf" <<END
upstream $backend {
    server 127.0.0.1:19999;
    keepalive 64;
}
 
server {
    server_name $website;
    location / {
        proxy_set_header X-Forwarded-Host \$host;
        proxy_set_header X-Forwarded-Server \$host;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_pass http://$backend;
        proxy_http_version 1.1;
        proxy_pass_request_headers on;
        proxy_set_header Connection "keep-alive";
        proxy_store off;
    }
error_page 502  /502.html;
        location = /502.html {
                root /etc/netdata;
                internal;
        }
}

END
echo "<br><br><br><br><br><br><br><b><center> Please enable NetData to view this page !</center></b>" > /etc/netdata/502.html
if [ "$(rpm -q --qf "%{VERSION}" $(rpm -q --whatprovides redhat-release))" == "6" ]; then 
# stop netdata
killall netdata
# copy netdata to init.d
cp /usr/local/vpssim/netdata/system/netdata-init-d /etc/init.d/netdata && chmod +x /etc/init.d/netdata
# enable netdata at boot
chkconfig --add netdata
chkconfig --levels 235 netdata on
# start netdata
service netdata start
service netdata restart
# reload nginx
service nginx reload
else 
# stop netdata
killall netdata
# copy netdata.service to systemd
cp /usr/local/vpssim/netdata/system/netdata.service /etc/systemd/system/ && chmod +x /etc/systemd/system/netdata.service
# let systemd know there is a new service
systemctl daemon-reload
# enable netdata at boot
systemctl enable netdata
# start netdata
systemctl start netdata
service netdata start
service netdata restart
# reload nginx
systemctl reload nginx
fi
echo "$website" > /etc/vpssim/netdatasite.info
echo "$NetData_VERSION" > /etc/vpssim/netdata.version
rm -rf /tmp/00-all-netdata-version.txt
clear
echo "========================================================================="
echo "Setup NetData $NetData_VERSION for $website finished."
echo "-------------------------------------------------------------------------"
echo "Point $website to $serverip"
echo "-------------------------------------------------------------------------"
echo "And access to this domain on the browser to use NetData"
/etc/vpssim/menu/vpssim-netdata-menu
