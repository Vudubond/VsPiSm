#!/bin/bash

. /home/vpssim.conf
echo "========================================================================="
echo "Use this function to add website to server"
echo "-------------------------------------------------------------------------"
echo -n "Type in the domain [ENTER]: " 
read website
website=`echo $website | tr '[A-Z]' '[a-z]'`
if [ "$website" = "" ]; then
clear
echo "========================================================================="
echo "You typed wrong, please type in accurately!"
/etc/vpssim/menu/vpssim-them-website-menu
exit
fi

kiemtradomain3="^([[:alnum:]]([[:alnum:]\-]{0,61}[[:alnum:]])?\.)+[[:alpha:]]{2,14}$";
if [[ ! "$website" =~ $kiemtradomain3 ]]; then
	website=`echo $website | tr '[A-Z]' '[a-z]'`
clear
echo "========================================================================="
echo "$website maybe not a domain name!"
echo "-------------------------------------------------------------------------"
echo "Please try again !"
/etc/vpssim/menu/vpssim-them-website-menu
exit
fi


if [ -f /etc/nginx/conf.d/$website.conf ]; then
clear
echo "========================================================================="
echo "Discover that $website is existed in the system!"
/etc/vpssim/menu/vpssim-them-website-menu
exit
fi
    mkdir -p "/home/$website/public_html"
    \cp -uf /etc/vpssim/menu/robots.txt "/home/$website/public_html/"
chown -R nginx:nginx "/home/$website/public_html/"
find "/home/$website/public_html/" -type d -exec chmod g+s {} \;
    mkdir -p "/home/$website/logs"
cat > "/home/$website/public_html/index.html" <<END
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
	<head>
		<title>Add $website to server by VPSSIM successful !</title>
		<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
		<style type="text/css">
			/*<![CDATA[*/
			body {
				background-color: #fff;
				color: #000;
				font-size: 0.9em;
				font-family: sans-serif,helvetica;
				margin: 0;
				padding: 0;
			}
		 h1 {
				text-align: center;
				margin: 1;
				padding: 1em 2em 1em;
				background-color: yellow;
				color: red;
				font-weight: normal;
				font-size: 2em;
				border-bottom: 5px solid #000;
			}
			h1 strong {
				font-weight: bold;
			}
			/*]]>*/
		</style>
	</head>
	<body>
		<h1><strong>Add $website to server by <a href="https://vpssim.com" title="Setup VPS, Server by VPSSIM" > VPSSIM</a> successful !</strong></h1>
			</body>
</html>
END

    cat > "/etc/nginx/conf.d/$website.conf" <<END
server {
	    server_name www.$website;
	    rewrite ^(.*) http://$website\$1 permanent;
    	}
server {
	    listen   80;

    	access_log off;
    	# access_log   /home/$website/logs/access_log;
    	error_log off;
    	# error_log /home/$website/logs/error.log;
    	add_header X-Frame-Options SAMEORIGIN;
		add_header X-Content-Type-Options nosniff;
		add_header X-XSS-Protection "1; mode=block";
		root /home/$website/public_html;
include /etc/nginx/conf/ddos2.conf;
 	index index.php index.html index.htm;
    	server_name $website;

#///////////////////////////////////////////////////////
# You can use only 1 rule (AAA or BBB or CCC or DDD)
# Please do not delete line AAA, BBB, CCC or DDD. Only Comment it if you do not use. 
# All of them need for [ Config Vhost For Plugin Cache ] function in [ Wordpress Blog Tools ]
#///////////////////////////////////////////////////////


#Run all the websites (Wordpress, Xenforo, Joomla, Phpbb .... ),if you use your rule, comment the line below (AAA)
include /etc/nginx/conf/all.conf;

# If you use your rule, comment the line above , and  Uncoment 3 lines belows and set your rule within it.. (BBB)
#location / {
#Uncomment 3 lines and set your rules here!
#}

# Rule cho wordpress + Plugin wp super cache. (CCC)
#include /etc/nginx/conf/supercache.conf;  

# Rule cho wordpress + Plugin W3 Total Cache. (DDD)
#include /etc/nginx/conf/w3totalcache.conf;  

# Config Cache Static Files
include /etc/nginx/conf/staticfiles.conf;

# Security, sql injection propeller ....(uncoment if you want to use). Because some website plugins do not run with this config, so VPSSIM to turn off default
# And do not delete the line below or VPSSIM will not work !
#include /etc/nginx/conf/block.conf;

# Error Page
#error_page 403 /errorpage_html/403.html;
#error_page 404 /errorpage_html/404.html;
#error_page 405 /errorpage_html/405.html;
#error_page 502 /errorpage_html/502.html;
#error_page 503 /errorpage_html/503.html;
#error_page 504 /errorpage_html/504.html;
#location ^~ /errorpage_html/ {
#   internal;
#    root /home/$website;
#    access_log              off;
#}
    	location ~ \.php$ {
		fastcgi_split_path_info ^(.+\.php)(/.+)$;
        	include /etc/nginx/fastcgi_params;
        	fastcgi_pass 127.0.0.1:9000;
        	fastcgi_index index.php;
		fastcgi_connect_timeout 250;
		fastcgi_send_timeout 250;
		fastcgi_read_timeout 250;
		fastcgi_buffer_size 256k;
		fastcgi_buffers 4 256k;
		fastcgi_busy_buffers_size 256k;
		fastcgi_temp_file_write_size 256k;
		fastcgi_intercept_errors on;
        	fastcgi_param SCRIPT_FILENAME /home/$website/public_html\$fastcgi_script_name;
    	}

#include /etc/nginx/conf/phpstatus.conf;
include /etc/nginx/conf/drop.conf;

    }
END
mkdir -p /home/$website/errorpage_html && cp -r /etc/vpssim/errorpage_html/*.html /home/$website/errorpage_html
#######################################################################
#######################################################################
echo "-------------------------------------------------------------------------"
read -r -p "Do you want VPSSIM create new database for $website ? [y/N] " response
case $response in
    [yY][eE][sS]|[yY]) 
    echo "-------------------------------------------------------------------------"
    echo "Please wait...";sleep 1 
   echo "$website" > /tmp/databasename.txt
#echo $website | sed "s/\./_/" | sed "s/\-/_/" | cut -c1-14  > /tmp/databasename.txt  
sed -i 's/\./_/g' /tmp/databasename.txt
sed -i 's/\-/_/g' /tmp/databasename.txt
random=`date |md5sum |cut -c '1-4'`
dataname=`cat /tmp/databasename.txt | cut -c1-11`_$random
username=`cat /tmp/databasename.txt | sed "s/\_//" | sed "s/\_//" | sed "s/\_//" | sed "s/\_//" | cut -c1-10`$random
password=`date |md5sum |cut -c '14-29'`
rm -rf /tmp/databasename.txt
cat > "/tmp/config.temp" <<END
CREATE DATABASE $dataname COLLATE utf8_general_ci;
END

mysql -u root -p$mariadbpass < /tmp/config.temp
rm -f /tmp/config.temp

 cat > "/tmp/config.temp" <<END
CREATE USER '$username'@'localhost' IDENTIFIED BY '$password';
END

	mysql -u root -p$mariadbpass < /tmp/config.temp
	rm -f /tmp/config.temp

    cat > "/tmp/config.temp" <<END
GRANT ALL PRIVILEGES ON $dataname . * TO '$username'@'localhost';
END
	mysql -u root -p$mariadbpass < /tmp/config.temp
	rm -f /tmp/config.temp

    cat > "/tmp/config.temp" <<END
FLUSH PRIVILEGES;
END
	mysql -u root -p$mariadbpass < /tmp/config.temp
	rm -f /tmp/config.temp

echo "=========================================================================" >> /home/DBinfo.txt
echo "Database: $dataname - Created on: $(date +%d/%m/%Y) when add $website to VPS" >> /home/DBinfo.txt
echo "=========================================================================" >> /home/DBinfo.txt
echo "Data name: $dataname" >> /home/DBinfo.txt
echo "Username: $username" >> /home/DBinfo.txt
echo "password: $password" >> /home/DBinfo.txt
echo "" >> /home/DBinfo.txt
if [ "$(rpm -q --qf "%{VERSION}" $(rpm -q --whatprovides redhat-release))" == "6" ]; then 
service nginx reload
else 
systemctl reload nginx
fi
clear
echo "========================================================================="
echo "$website is added to server successfully "
echo "-------------------------------------------------------------------------"
echo "Vhost File: /etc/nginx/conf.d/$website.conf"
echo "-------------------------------------------------------------------------"
echo "Upload code to: /home/$website/public_html"
echo "-------------------------------------------------------------------------"
echo "Database auto created by VPSSIM for $website :"
echo "-------------------------------------------------------------------------"
echo "Database: $dataname"
echo "User name: $username" 
echo "Password: $password"
echo "-------------------------------------------------------------------------"
echo "Database's infomation saved in: /home/DBinfo.txt"
/etc/vpssim/menu/vpssim-them-website-menu
        ;;
    *)
if [ "$(rpm -q --qf "%{VERSION}" $(rpm -q --whatprovides redhat-release))" == "6" ]; then 
service nginx reload
else 
systemctl reload nginx
fi
clear
echo "========================================================================="
echo "$website is added successful to server"
echo "-------------------------------------------------------------------------"
echo "Upload code to /home/$website/public_html"
echo "-------------------------------------------------------------------------"
echo "Vhost File: /etc/nginx/conf.d/$website.conf"
/etc/vpssim/menu/vpssim-them-website-menu
        ;;
esac
