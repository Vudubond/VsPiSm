#!/bin/bash
. /home/vpssim.conf
echo "========================================================================= "
echo -n "Type in the domain you want to install SSL [ENTER]: " 
read domainssl
if [ "$domainssl" = "" ]; then
clear
echo "========================================================================="
echo "You typed wrong, Please fill accurately"
/etc/vpssim/menu/vpssim-tao-ssl-menu
exit
fi
kiemtradomain3="^([[:alnum:]]([[:alnum:]\-]{0,61}[[:alnum:]])?\.)+[[:alpha:]]{2,14}$";
if [[ ! "$domainssl" =~ $kiemtradomain3 ]]; then
	domainssl=`echo $domainssl | tr '[A-Z]' '[a-z]'`
clear
echo "========================================================================="
echo "$domainssl maybe not a domain name!"
echo "-------------------------------------------------------------------------"
echo "Please try again !"
/etc/vpssim/menu/vpssim-tao-ssl-menu
exit
fi 

if [ ! -f /etc/nginx/conf.d/$domainssl.conf ]; then
clear
echo "========================================================================="
echo "$domainssl is not exist in the system!"
echo "-------------------------------------------------------------------------"
echo "Please try again"
/etc/vpssim/menu/vpssim-tao-ssl-menu
exit
fi

if [ -f /etc/nginx/ssl/$domainssl/$domainssl.csr ]; then
clear
echo "========================================================================= "
echo "$domainssl.key has already created on VPS."
echo "-------------------------------------------------------------------------"
echo "You can download CSR file at: http://$serverip:$priport/$domainssl.csr"
echo "-------------------------------------------------------------------------"
echo "If you want to re-create, delete folder $domainssl in /etc/nginx/ssl/ "
echo "-------------------------------------------------------------------------"
echo "And use this function again!"
/etc/vpssim/menu/vpssim-tao-ssl-menu
exit
fi

mkdir -p /etc/nginx/ssl/$domainssl
cd /etc/nginx/ssl/$domainssl
sleep 3
clear
echo "========================================================================= "
echo "Step I: Create $domainssl.key"
echo "========================================================================= "
echo "You should fill out the information as examples below"
echo "========================================================================= "
sleep 3
echo "Country Name :US"
echo "State or Province Name :New Jersey"
echo "Locality Name :Absecon"
echo "Organization Name (eg, company) :SoftwareDev, LLC"
echo "Organizational Unit Name :Web Services"
echo "Common Name : $domainssl"                 
echo "Email Address :your-email@domain.com"
echo "A challenge password :  (Enter)"
echo "An optional company name :  (Enter)"
echo "========================================================================= "
read -p "Press [Enter] to continue ..."
openssl req -nodes -newkey rsa:2048 -keyout $domainssl.key -out $domainssl.csr
\cp -uf /etc/nginx/ssl/$domainssl/$domainssl.csr /home/$mainsite/private_html/
sudo cp $domainssl.key $domainssl.key.org
sudo openssl rsa -in $domainssl.key.org -out $domainssl.key
clear
echo "========================================================================= "
echo "========================================================================= "
echo "Step II: Sign SSL Certificate"
echo "========================================================================= "
echo "========================================================================= "
sudo openssl x509 -req -days 365 -in $domainssl.csr -signkey $domainssl.key -out $domainssl.crt
sleep 3
    cat > "/home/$mainsite/private_html/$domainssl.conf.txt" <<END
======================================================
Replace this paragraph to the lower segment of the file:  /etc/nginx/conf.d/$domainssl.conf
======================================================

server {
    listen 80;
    server_name $domainssl www.$domainssl;
    rewrite ^(.*) https://$domainssl\$1 permanent;
}
server {
	
    listen 443 ssl http2; # Use this config for Nginx from 1.9.5 version
    #listen 443 ssl spdy; # Use this config for Nginx before 1.9.5 version
    ssl_certificate /etc/nginx/ssl/$domainssl/$domainssl.crt;
    ssl_certificate_key /etc/nginx/ssl/$domainssl/$domainssl.key; 
 ssl_session_cache shared:SSL:10m;
 ssl_session_timeout 10m;
 ssl_prefer_server_ciphers on;
 ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
 ssl_ciphers ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA:!CAMELLIA:!DES-CBC3-SHA;
    #ssl_stapling on;
  #resolver 8.8.4.4 8.8.8.8 valid=300s;
  #resolver_timeout 10s;
  ssl_trusted_certificate /etc/nginx/ssl/$domainssl/$domainssl.crt;
      ssl_buffer_size 1400;
  ssl_session_tickets on;
add_header Strict-Transport-Security max-age=31536000;   	
        access_log off;
    	error_log off;
    	# error_log /home/$domainssl/logs/error.log;
    	root /home/$domainssl/public_html;
include /etc/nginx/conf/ddos2.conf;
	index index.php index.html index.htm;
        server_name $domainssl;

=======================================================


-------------------------------------------------------------------
Paragraph below should replace:
-------------------------------------------------------------------


=======================================================

server {
	    server_name www.$domainssl;
	    rewrite ^(.*) http://$domainssl\$1 permanent;
    	}
server {
	    listen   80;

    	access_log off;
    	error_log off;
    	# error_log /home/$domainssl/logs/error.log;
    	root /home/$domainssl/public_html;
include /etc/nginx/conf/ddos2.conf;
 	index index.php index.html index.htm;
    	server_name $domainssl;

=========================================================
 

=========================================================
Paragraph below (or similar content) will be retained:
=========================================================

#///////////////////////////////////////////////////////
#///////////////////////////////////////////////////////
#Run all the websites,if you use your rule, comment or delete the line below (AAA)
include /etc/nginx/conf/all.conf;

#If you use your rule, comment or delete above line, and  Uncoment 3 lines belows and set your rule within it..
#location / {
#Uncomment 3 lines and set your rules here!
#}

#config for wordpress + Plugin super cache, If you run wordpress, uncomment the line below and comment out the line below the AAA
#include /etc/nginx/conf/supercache.conf;  

#Do not delete the bottom line, if you delete google pagespeed function will not work!!
#include /etc/nginx/ngx_pagespeed.conf;

#security, sql injection Propeller ....(uncoment if you want to use). Because some website plugins do not run with this config, so VPSSIM to turn off default
#include /etc/nginx/conf/block.conf;
    	location ~ \.php$ {
		fastcgi_split_path_info ^(.+\.php)(/.+)$;
        	include /etc/nginx/fastcgi_params;
        	fastcgi_pass 127.0.0.1:9000;
        	fastcgi_index index.php;
		fastcgi_connect_timeout 60;
		fastcgi_send_timeout 180;
		fastcgi_read_timeout 180;
		fastcgi_buffer_size 256k;
		fastcgi_buffers 4 256k;
		fastcgi_busy_buffers_size 256k;
		fastcgi_temp_file_write_size 256k;
		fastcgi_intercept_errors on;
        	fastcgi_param SCRIPT_FILENAME /home/$domainssl/public_html\$fastcgi_script_name;
    	}
include /etc/nginx/conf/staticfiles.conf;
#include /etc/nginx/conf/phpstatus.conf;
include /etc/nginx/conf/drop.conf;
#include /etc/nginx/conf/errorpage.conf;
    }
END
echo "Please wait...";sleep 1 
clear
echo "========================================================================= "
echo "SSL has installed 365 days for $domainssl on VPS"
echo "-------------------------------------------------------------------------"
echo "You have to edit /etc/nginx/conf.d/$domainssl.conf to finish setup SSL"
echo "-------------------------------------------------------------------------"
echo "Link download $domainssl.conf example: "
echo "-------------------------------------------------------------------------"
echo "http://$serverip:$priport/$domainssl.conf.txt"
echo "-------------------------------------------------------------------------"
echo "Use $domainssl.csr to register SSL with the 3rd"
echo "-------------------------------------------------------------------------"
echo "Link download $domainssl.csr:"
echo "-------------------------------------------------------------------------"
echo "http://$serverip:$priport/$domainssl.csr"
echo "-------------------------------------------------------------------------"
echo "See  instructions at VPSSIM.COM"
echo "========================================================================= "
read -p "Press [Enter] to back to VPSSIM ..."
clear
vpssim
exit
fi


